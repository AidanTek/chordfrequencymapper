# chordFrequencyMapper/chordResult.py

'''
This module imports the csv file generated by notetablegen.py and uses it to
display the frequency content of a chord.
'''

import sys
import os
import csv

# If user selects a major chord:
def chord_major(root):
    # Create a dictionary, format will be:
    #   key = 'note name': [MIDI no., frequency]
    note_table = {}

    with open(os.path.join(sys.path[0], 'note_table.csv'), 'r') as f:
        chordread = csv.reader(f, delimiter=',', quotechar='|')
        for row in chordread:
            note_table[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,note_table[root][0],note_table[root][1]))

    # find the third and fifth in the chord:
    for x, y in note_table.items():
        if int(y[0]) == int(note_table[root][0]) + 4:
            print('Third = {} || MIDI note = {} || Frequency = {}'.format(x, note_table[x][0], note_table[x][1]))

    for x, y in note_table.items():
        if int(y[0]) == int(note_table[root][0]) + 7:
            print('Fifth = {} || MIDI note = {} || Frequency = {}'.format(x, note_table[x][0], note_table[x][1]))


# If user selects a minor chord:
def chord_minor(root):
    # Create a dictionary, format will be:
    #   key = 'note name': [MIDI no., frequency]
    note_table = {}

    with open(os.path.join(sys.path[0], 'note_table.csv'), 'r') as f:
        chordread = csv.reader(f, delimiter=',', quotechar='|')
        for row in chordread:
            note_table[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,note_table[root][0],note_table[root][1]))

    # find the third and fifth in the chord:
    for x, y in note_table.items():
        if int(y[0]) == int(note_table[root][0]) + 3:
            print('Third = {} || MIDI note = {} || Frequency = {}'.format(x, note_table[x][0], note_table[x][1]))

    for x, y in note_table.items():
        if int(y[0]) == int(note_table[root][0]) + 7:
            print('Fifth = {} || MIDI note = {} || Frequency = {}'.format(x, note_table[x][0], note_table[x][1]))


# Display note data:
def display_note(root):
    note_table = {}

    with open(os.path.join(sys.path[0], 'note_table.csv'), 'r') as f:
        noteread = csv.reader(f, delimiter=',', quotechar='|')
        for row in noteread:
            note_table[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,note_table[root][0],note_table[root][1]))
