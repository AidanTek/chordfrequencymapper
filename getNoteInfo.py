# chordFrequencyMapper/chordResult.py

# This script imports the csv file generated by noteTableGen.py and uses it to
# display the frequency content of a chord.

import sys
import os
import csv

# If user selects a major chord:
def chordMajor(root):
    # Create a dictionary, format will be:
    #   key = 'note name': [MIDI no., frequency]
    noteTable = {}

    with open(os.path.join(sys.path[0], 'noteTable.csv'), 'r') as f:
        chordRead = csv.reader(f, delimiter=',', quotechar='|')
        for row in chordRead:
            noteTable[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,noteTable[root][0],noteTable[root][1]))

    # find the third and fifth in the chord:
    for x, y in noteTable.items():
        if int(y[0]) == int(noteTable[root][0]) + 4:
            print('Third = {} || MIDI note = {} || Frequency = {}'.format(x, noteTable[x][0], noteTable[x][1]))

    for x, y in noteTable.items():
        if int(y[0]) == int(noteTable[root][0]) + 7:
            print('Fifth = {} || MIDI note = {} || Frequency = {}'.format(x, noteTable[x][0], noteTable[x][1]))


# If user selects a minor chord:
def chordMinor(root):
    # Create a dictionary, format will be:
    #   key = 'note name': [MIDI no., frequency]
    noteTable = {}

    with open(os.path.join(sys.path[0], 'noteTable.csv'), 'r') as f:
        chordRead = csv.reader(f, delimiter=',', quotechar='|')
        for row in chordRead:
            noteTable[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,noteTable[root][0],noteTable[root][1]))

    # find the third and fifth in the chord:
    for x, y in noteTable.items():
        if int(y[0]) == int(noteTable[root][0]) + 3:
            print('Third = {} || MIDI note = {} || Frequency = {}'.format(x, noteTable[x][0], noteTable[x][1]))

    for x, y in noteTable.items():
        if int(y[0]) == int(noteTable[root][0]) + 7:
            print('Fifth = {} || MIDI note = {} || Frequency = {}'.format(x, noteTable[x][0], noteTable[x][1]))


# Display note data:
def displayNote(root):
    noteTable = {}

    with open(os.path.join(sys.path[0], 'noteTable.csv'), 'r') as f:
        chordRead = csv.reader(f, delimiter=',', quotechar='|')
        for row in chordRead:
            noteTable[str(row[0])] = row[1], row[2]
        f.close()

    print('Root = {} || MIDI Number = {} || Frequency = {}'.format(root,noteTable[root][0],noteTable[root][1]))
